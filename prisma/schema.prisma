generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(uuid())
  firstName   String
  lastName    String
  username    String   @unique
  email       String   @unique
  phoneNumber String   @unique
  password    String
  addresses Address[]
  createdAt   DateTime @default(now())
  OTP         OTP[]
  isVerified  Boolean @default(false)

  Order Order[]

  Profile Profile[]

  Cart Cart[]

  Wishlist Wishlist[]
}

model Address {
  id        String  @id @default(uuid())
  userId    String
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  street    String
  city      String
  state     String
  zipCode   String
  country   String
}

model OTP {
  id        String   @id @default(uuid()) //Unique identifier
  userId    String   @unique
  user      User     @relation(fields: [userId], references: [id])
  otp       String
  expiresAt DateTime
  createdAt DateTime @default(now())
}

model Product {
  id    String @id @default(uuid())
  name String
  description String?
  price Float
  stock Int
  imageUrl  String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  OrderItem OrderItem[]

  Cart Cart[]

  Wishlist Wishlist[]
}

model Profile {
  id        String  @id @default(uuid())
  user      User    @relation(fields: [userId], references: [id])
  userId    String  @unique
  bio       String?
  avatarUrl String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id  String @id @default(uuid())
  userId  String
  total Float
  status String @default("pending") //pending,paid, shipped ,delivered, cancelled
  createdAt DateTime @default(now())

  user  User @relation(fields: [userId], references: [id])
  items OrderItem[]
}

model OrderItem {
  id  String  @id @default(uuid())
  orderId String
  productId String
  quantity  Int
  price Float

  order Order @relation(fields: [orderId], references: [id])
  product Product @relation(fields: [productId], references: [id])
}

model Cart {
  id  String @id @default(uuid())
  userId  String
  user  User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  productId String
  product Product @relation(fields: [productId], references: [id])
  quantity  Int   @default(1)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Wishlist {
  id  String  @id @default(uuid())
  userId  String
  user  User @relation(fields: [userId], references: [id], onDelete: Cascade)
  productId String
  product Product @relation(fields: [productId], references: [id])
  createdAt DateTime @default(now())
}
